version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: rag_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=MongoServerJS_RAG-WebApp
    networks:
      - rag_network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag_backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/MongoServerJS_RAG-WebApp
      - RAG_SERVICE_URL=http://rag_service:8000
      - JWT_SECRET=${JWT_SECRET:-your-default-jwt-secret}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ./backend/documents:/app/documents
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - rag_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rag_service:
    build:
      context: ./rag_service
      dockerfile: Dockerfile
    container_name: rag_python_service
    ports:
      - "8000:8000"
    environment:
      - DOCUMENTS_DIR=/app/documents
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MODEL_GLOBAL=llama-3.1-8b-instant
      - PYTHONPATH=/app
      - TOKENIZERS_PARALLELISM=false
    volumes:
      - ./backend/documents:/app/documents:ro
      - rag_models_cache:/app/.cache
    networks:
      - rag_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag_frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - BACKEND_URL=http://backend:3001
    depends_on:
      - backend
    networks:
      - rag_network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  rag_models_cache:
    driver: local

networks:
  rag_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
